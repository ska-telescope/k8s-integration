{{ if .Values.webjive.enabled }}

---
apiVersion: v1
kind: Secret
metadata:
  name: integration-tls
type: type: Opaque
data:
  tls.crt:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZlakNDQkdLZ0F3SUJBZ0lTQTE0NmZaR1Z4SCt0YUFjMURSTk5iS2EvTUEwR0NTcUdTSWIzRFFFQkN3VUEKTUVveEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1TTXdJUVlEVlFRRApFeHBNWlhRbmN5QkZibU55ZVhCMElFRjFkR2h2Y21sMGVTQllNekFlRncweE9UQTBNRFF3T1RJeE1qSmFGdzB4Ck9UQTNNRE13T1RJeE1qSmFNQ3d4S2pBb0JnTlZCQU1USVdsdWRHVm5jbUYwYVc5dUxtVnVaMkZuWlhOcllTMXcKYjNKMGRXZGhiQzV3ZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1ZnbVlVawo0WjZSNmJjQzkxOWNzL3ZVSVFObnhBQ1RmMy9URElNbVBoTHYveDc4dEIvZDRwV0FoK0tHMWcwNUt3RFgxVkphCnRuZ0ZqWFk4SUJyU2ZwZmd0S2tXT01KbUsxK0FFc20zeVhLOG5RaVJROTVxRVVLZDVCRHVzWlo2K2V6NUgvT08KMTlvQXVNNlNqMnI5bWJ5VXpVUTQxZXVBSUhiTjhPV211SzlKMlAvY2I0SGh2eDBEOENiQW03Vis4RlUrQnhubQpma2pIeEtsS1RzQUdkbTZFZndBSm9XSHBiSzdBaHNFRDFiUG1oZ1BvK3lUOUhaS1B5SXp6c3p2cUhtQlYrL1RUCmJ2ckxhSjZPcTg2amFuQk4vN28vcHYySHduSkdINmZGQ1hDOEZxb0IxZ21XQkh3VTgrRTRTWkZlZ2RpYUpwSXUKdEM0ckFmU2lLYmNNOW9FQ0F3RUFBYU9DQW5Zd2dnSnlNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVClp5dmt0WW5udnpkd2ljVWx2cEdlQzkrR0pWUXdId1lEVlIwakJCZ3dGb0FVcUVwcVl3UjkzYnJtMFRtM3BrVmwKNy9PbzdLRXdid1lJS3dZQkJRVUhBUUVFWXpCaE1DNEdDQ3NHQVFVRkJ6QUJoaUpvZEhSd09pOHZiMk56Y0M1cApiblF0ZURNdWJHVjBjMlZ1WTNKNWNIUXViM0puTUM4R0NDc0dBUVVGQnpBQ2hpTm9kSFJ3T2k4dlkyVnlkQzVwCmJuUXRlRE11YkdWMGMyVnVZM0o1Y0hRdWIzSm5MekFzQmdOVkhSRUVKVEFqZ2lGcGJuUmxaM0poZEdsdmJpNWwKYm1kaFoyVnphMkV0Y0c5eWRIVm5ZV3d1Y0hRd1RBWURWUjBnQkVVd1F6QUlCZ1puZ1F3QkFnRXdOd1lMS3dZQgpCQUdDM3hNQkFRRXdLREFtQmdnckJnRUZCUWNDQVJZYWFIUjBjRG92TDJOd2N5NXNaWFJ6Wlc1amNubHdkQzV2CmNtY3dnZ0VFQmdvckJnRUVBZFo1QWdRQ0JJSDFCSUh5QVBBQWRnQjBmdHFETWEwekVKRWhuTTRsVDBKd3dyLzkKWGtJZ0NNWTNOWG5tRUh2TVZnQUFBV25uM2dzMUFBQUVBd0JITUVVQ0lCMjhPZjI4VGlHMytTOVFzbWRmYXhsawpUdHJDWWVWc0RyMmY1K0FIRHRpQkFpRUE1aU5iNXFwWldNRjR5TnNkS0pVbnBuZEJOQktNUU1PS2t4Sk1YN1JpCkF1MEFkZ0FwUEZHV1ZNZzVaYnFxVVB4WUI5UzNiNzlZZWlseTNLVEREUFRsUlVmMGVBQUFBV25uM2d1cUFBQUUKQXdCSE1FVUNJUURNRldibmNaaW5kU3p6UkhZRnZRaGRpanIvZkJ5d2VVUmV6dnBrMlFXcW1RSWdmaWlMaFdwVQovcGlBcy9ZOGdrM3hTZkxoelpkMlVjZDB2eWY4Z1RXdUFrMHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR2JMCitkVnY1UEo3NGx2QWtINlc2YlkvS2s3TE1nN1JnWkl4S2VuZHo0RnVGWUxjQ0hqSDVYRUFtWDVUeklFbHk5cCsKdnFGZTBtOU5WMFhPQjYxb01tLzZycXh3cDk5eUUrcGlRSHB3Q3dTKzBpUjNibHhZTU1LakQrUTR4OVlIcG5iSgo4QVlXa1pGZVZ4cmNlV29wb1Z1b0wra1F2VkxiWkwvSU5hS1ZyRjVQQUFVZTJwemlINkVPSGpPRzQ2eDFiUUE3CloxaU9RbnF6UDllZ1d5enREZ0tJMWRQT3hkdkxUejQyc1l3Z0gvRzYvRmk5TWs0SFloY1JqVm51U0hnbTg1UjUKY3VFTElSKzF4QTBMS2dmbDhDdkNVY3BoOC92dUJ0Wi9sNlY4WFhEa2pMZ2FUZkFXamxWUTRjRHptSG1IaVV1SApuektNRkp5OVUzOW9kSlJKNmxnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key:LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRGxZSm1GSk9HZWtlbTMKQXZkZlhMUDcxQ0VEWjhRQWszOS8wd3lESmo0UzcvOGUvTFFmM2VLVmdJZmlodFlOT1NzQTE5VlNXclo0QlkxMgpQQ0FhMG42WDRMU3BGampDWml0ZmdCTEp0OGx5dkowSWtVUGVhaEZDbmVRUTdyR1dldm5zK1Ivemp0ZmFBTGpPCmtvOXEvWm04bE0xRU9OWHJnQ0IyemZEbHByaXZTZGovM0crQjRiOGRBL0Ftd0p1MWZ2QlZQZ2NaNW41SXg4U3AKU2s3QUJuWnVoSDhBQ2FGaDZXeXV3SWJCQTlXejVvWUQ2UHNrL1IyU2o4aU04N003Nmg1Z1ZmdjAwMjc2eTJpZQpqcXZPbzJwd1RmKzZQNmI5aDhKeVJoK254UWx3dkJhcUFkWUpsZ1I4RlBQaE9FbVJYb0hZbWlhU0xyUXVLd0gwCm9pbTNEUGFCQWdNQkFBRUNnZ0VCQUxJb3FMVkFvemw5emRFSExjcFUvN3J1MWNHR1hEZXlXTXFZeTFRbVpQcGkKakg2dCt0M3hncWRxVUtFQzU4a1hpUzQ3ZGdaa1RPdkdMRTBVZ0Q4MUZYeXozTDZrY3V1VFhjYnNmQ3RQWTltSgpaRk1lT1YvTWRLR1FiMjh6WnA0aDRITk9RS0gxWmZSK3NReEp5N2xuUm55eCt3a3RPQUtWM3lGSDdmOEIwdHJhCkFaSFhWSVp6M1M5L3VISWMva2FscmVPM3Uxb254QXRTb0RWTHNqRWVPZ09PZWZTbUFVdXE4TGx1empWQTJVQ3QKRjFtQ3A1UExsUmpWWUlwNktBSUk3V0NMaktnRkd5WjZaT3VQdjc5ckNzbEJCdkc0Uk9CQUxzeEJSdWtBNDBuZQovK3ljeFVnWDFRNjV1c2dKcGlLTU02ZUpvNTcveFdiYzFhT3h3RVhhOWwwQ2dZRUE4dGdRTU9LU3JnQjBoT2lHCkhHb2JkRUZ0NmsvTm0xeGdyZFQ0a2plenQ1UmpPRnJKV3ZuVlBYVHp6UG96R081UEhsNVZrc2tKZG4vQUlqdlQKUVZydHhpdmdrVmFpaFhzZXlmSWZaYmVYVDY5cmhQYjE5Vjg4RndhRjVmdkhZTkFYSWRKNGVxczhMaHg3Q1ZQdgpvcU5sbTZSWENKeHFDZ1hwd2daT3dtc0V0ejhDZ1lFQThjM0ZaekdZY2IyQ1kzdmhBWlVCZ08yMWM5UjA2MVk1CklvdzR0ci81Vk1ocUxtb1JaZnlEZ2g2bzNVMXFkM085YWt5VnBuVUlEUzhJVDcyTUU2YTdyckc3RHpoTDBvWEUKVkpMdThxWng5WlljelVjYlFGNXFLOXFOb1ljaldkT2RFNlI5OGoxSjM4Rk1qTVlwWFYzcmdyUUpjbHM5YUhmUQpzYjVYS2wyU29qOENnWUFjcDN2NW1MS0FENU93SHhPOEJKVXF1Wkd6cFNqNG5RVFhYaHJhZmZJWnhrdVMyYnVLCm5aSVl4MVVCS2NDZnYzYmNlWHNWYjkxSyt6WDdsQjJRUjU5bzA4S1N3NnMzbnRoNk1iU2N0dllHdEFjMjBFRWoKYTlKV1VURzVlbVVET21xUVZocGJOeHRKd1ppTytEVjlkbFJGOGpWRzBkWDlTc2RUV3BVdWdad3oxd0tCZ0RxYQo4TmxOLy9DeFNjVHE1V0lJeDFDRVRKSkNVQVFwNWJjbDNTa041bFJTTHNvSkV5Wnd5VDdrUjNFN3JpNDljdzhzCmVLamJmSlFWYmlKRmdvblF3M1JYeDBxdERsTjc4RlcvTndMQXJLWWxOOTNZK2hYanpEL012TDhGamQvYmxocUkKcDYzcWhOa2lkSGM2SUJSdEN3T210eE5zWWJuTU1GeWtFV1JIUVo3cEFvR0JBSVovM2JnL2RNN29WVEx1NUhJaworcHpWU01XQ25pL2d0djB4alQxNkl0YWRGRVRpaEIyQ200OHQrRzNCeldMWmRJdUdwTUh4OFp0ajNiK2dNa1JNCjNXczU5eUlaVWMwMGZBd2RiQUc5bmVCY01zM2hZMmF1RHRZNnMrM05ScWJhNmd4SW1heEVEL2Z1aUxTRDQ5SHAKdmM0YVRQTG83SXpHSjdpK1AvamlLaTc3Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

---
apiVersion: v1
kind: Service
metadata:
  name: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
    chart: {{ template "integration-tmc-webui.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: ClusterIP
  ports:
  - name: webjive-http
    port: 80
    protocol: TCP
  - name: tangogql-tcp
    port: 5004
    targetPort: tangogql-tcp
    protocol: TCP
  - name: dashboards-tcp
    port: 3012
    protocol: TCP
  - name: authserver-tcp
    port: 8080
    protocol: TCP
  - name: mongodb
    port: 27017
    protocol: TCP
  selector:
    app: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webjive-tangogql-nw-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/app-root: /graphiql
spec:
  tls:
  - hosts:
    - integration.engageska-portugal.pt
    secretName: integration-tls
  rules:
    - http:
        paths:
        - path: /testdb/(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 5004
        - path: /testdb/db/(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 5004
        - path: /testdb/graphiql/(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 5004
        - path: /testdb/socket/(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 5004

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - http:
        paths:
        - path: /(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 80
        - path: /testdb/dashboard
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 80
        - path: /testdb/dashboard/(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 80
        - path: /dashboards/(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 3012
        - path: /auth/(.*)
          backend:
           serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
           servicePort: 8080



---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
    chart: {{ template "integration-tmc-webui.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
  serviceName: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: webjive-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
        chart: {{ template "integration-tmc-webui.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      initContainers:
      - name: waitdatabaseds
        image: nexus.engageska-portugal.pt/ska-docker/tango-itango:latest
        imagePullPolicy: IfNotPresent
        command:
          - /usr/local/bin/wait-for-it.sh
          - databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000
          - --timeout=30
          - --strict
          - --
          - echo "Databaseds ready for use."

      containers:
      - name: webjive
        image: "{{ .Values.webjive.image.registry }}/{{ .Values.webjive.image.image }}:{{ .Values.webjive.image.tag }}"
        imagePullPolicy: {{ .Values.webjive.image.pullPolicy }}
        ports:
        - name: webjive-http
          containerPort: 80
          protocol: TCP

      - name: authserver
        image: "{{ .Values.authserver.image.registry }}/{{ .Values.authserver.image.image }}:{{ .Values.authserver.image.tag }}"
        imagePullPolicy: {{ .Values.authserver.image.pullPolicy }}
        ports:
        - name: authserver-tcp
          containerPort: 8080
          protocol: TCP
        env:
          - name: SECRET
            value: "s3cr3t"

      - name: dashboards
        image: "{{ .Values.dashboards.image.registry }}/{{ .Values.dashboards.image.image }}:{{ .Values.dashboards.image.tag }}"
        imagePullPolicy: {{ .Values.dashboards.image.pullPolicy }}
        env:
          - name: MONGO_HOST
            value: "mongodb://localhost/dashboards"
          - name: SECRET
            value: "s3cr3t"
        ports:
        - name: dashboards-tcp
          containerPort: 3012
          protocol: TCP

      - name: tangogql
        image: "{{ .Values.tangogql.image.registry }}/{{ .Values.tangogql.image.image }}:{{ .Values.tangogql.image.tag }}"
        imagePullPolicy: {{ .Values.tangogql.image.pullPolicy }}
        volumeMounts:
        - mountPath: /var/log/tangogql
          name: tangogql-logs
        env:
          - name: LOG_PATH
            value: "/var/log/tangogql"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: TANGO_HOST
            value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000
        ports:
        - name: tangogql-tcp
          containerPort: 5004
          protocol: TCP

      - name: redis
        image: "{{ .Values.redis.image.image }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - name: redis-tcp
          containerPort: 6379
          protocol: TCP

      - name: mongodb
        image: "{{ .Values.mongodb.image.image }}:{{ .Values.mongodb.image.tag }}"
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        ports:
        - name: mongodb
          containerPort: 27017
          protocol: TCP

        resources:
{{ toYaml .Values.webjive.resources | indent 10 }}
      volumes:
      - name: tangogql-logs
        persistentVolumeClaim:
          claimName: rsyslog-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{ end }}
