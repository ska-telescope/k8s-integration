{"created": 1580381379.3601062, "duration": 0.4439377784729004, "exitcode": 2, "root": "/home/tango/skampi/test-harness", "environment": {"Python": "3.7.3", "Platform": "Linux-4.15.0-74-generic-x86_64-with-debian-10.1", "Packages": {"pytest": "5.1.2", "py": "1.8.0", "pluggy": "0.13.0"}, "Plugins": {"bdd": "3.2.1", "metadata": "1.8.0", "json-report": "1.1.0", "pylint": "0.14.1", "cov": "2.7.1"}}, "summary": {"total": 0}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/__init__.py", "type": "Package"}, {"nodeid": "tests/acceptance_tests/releaseResources_bdd_test.py", "type": "Module"}]}, {"nodeid": "tests/test_1_devices.py", "outcome": "passed", "result": [{"nodeid": "tests/test_1_devices.py::test_init", "type": "Function", "lineno": 8}, {"nodeid": "tests/test_1_devices.py::test_devices", "type": "Function", "lineno": 11}]}, {"nodeid": "tests/test_2_start-up-telescope.py", "outcome": "passed", "result": [{"nodeid": "tests/test_2_start-up-telescope.py::test_init", "type": "Function", "lineno": 10}, {"nodeid": "tests/test_2_start-up-telescope.py::test_start_up_telescope", "type": "Function", "lineno": 13}]}, {"nodeid": "tests/test_3_logging_stack_is_nominal.py", "outcome": "passed", "result": [{"nodeid": "tests/test_3_logging_stack_is_nominal.py::test_kibana_should_be_accessible_via_ingress", "type": "Function", "lineno": 32}, {"nodeid": "tests/test_3_logging_stack_is_nominal.py::test_log_parsing_into_elasticsearch", "type": "Function", "lineno": 43}, {"nodeid": "tests/test_3_logging_stack_is_nominal.py::test_ska_logs_into_elasticsearch", "type": "Function", "lineno": 73}]}, {"nodeid": "tests/test_4_archiver.py", "outcome": "passed", "result": [{"nodeid": "tests/test_4_archiver.py::test_init", "type": "Function", "lineno": 7}, {"nodeid": "tests/test_4_archiver.py::test_archiver", "type": "Function", "lineno": 10}]}, {"nodeid": "tests/test_5_bdd_concept.py", "outcome": "passed", "result": [{"nodeid": "tests/test_5_bdd_concept.py::test_tango_setup", "type": "Function", "lineno": 224}]}, {"nodeid": "tests/test_5_logging_namespace.py", "outcome": "passed", "result": [{"nodeid": "tests/test_5_logging_namespace.py::test_logging_namespace", "type": "Function", "lineno": 4}]}, {"nodeid": "tests/test_6_multisubarray.py", "outcome": "passed", "result": [{"nodeid": "tests/test_6_multisubarray.py::test_init", "type": "Function", "lineno": 3}, {"nodeid": "tests/test_6_multisubarray.py::test_assignresources_sub1", "type": "Function", "lineno": 7}, {"nodeid": "tests/test_6_multisubarray.py::test_assignresouce_sub2", "type": "Function", "lineno": 14}, {"nodeid": "tests/test_6_multisubarray.py::test_assignresouce_sub3", "type": "Function", "lineno": 21}, {"nodeid": "tests/test_6_multisubarray.py::test_releaseresources_sub1", "type": "Function", "lineno": 28}, {"nodeid": "tests/test_6_multisubarray.py::test_releaseresources_sub2", "type": "Function", "lineno": 35}, {"nodeid": "tests/test_6_multisubarray.py::test_releaseresources_sub3", "type": "Function", "lineno": 42}]}, {"nodeid": "tests/test_7_start_up_telescope_bdd.py", "outcome": "passed", "result": [{"nodeid": "tests/test_7_start_up_telescope_bdd.py::test_config", "type": "Function", "lineno": 40}]}, {"nodeid": "tests/__init__.py", "outcome": "passed", "result": [{"nodeid": "tests/test_1_devices.py", "type": "Module"}, {"nodeid": "tests/test_2_start-up-telescope.py", "type": "Module"}, {"nodeid": "tests/test_3_logging_stack_is_nominal.py", "type": "Module"}, {"nodeid": "tests/test_4_archiver.py", "type": "Module"}, {"nodeid": "tests/test_5_bdd_concept.py", "type": "Module"}, {"nodeid": "tests/test_5_logging_namespace.py", "type": "Module"}, {"nodeid": "tests/test_6_multisubarray.py", "type": "Module"}, {"nodeid": "tests/test_7_start_up_telescope_bdd.py", "type": "Module"}]}, {"nodeid": "tests/acceptance_tests/releaseResources_bdd_test.py", "outcome": "failed", "result": [], "longrepr": "/venv/lib/python3.7/site-packages/_pytest/python.py:501: in _importtestmodule\n    mod = self.fspath.pyimport(ensuresyspath=importmode)\n/venv/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport\n    __import__(modname)\n<frozen importlib._bootstrap>:983: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:967: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:677: in _load_unlocked\n    ???\n/venv/lib/python3.7/site-packages/_pytest/assertion/rewrite.py:131: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n/venv/lib/python3.7/site-packages/_pytest/assertion/rewrite.py:280: in _rewrite_test\n    tree = ast.parse(source, filename=fn)\n/usr/lib/python3.7/ast.py:35: in parse\n    return compile(source, filename, mode, PyCF_ONLY_AST)\nE     File \"/home/tango/skampi/test-harness/tests/acceptance_tests/releaseResources_bdd_test.py\", line 19\nE       from pytest-bdd import scenario, given, when, then\nE                  ^\nE   SyntaxError: invalid syntax"}], "tests": [], "warnings": [{"message": "Unknown pytest.mark.XTP-277 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html", "when": "collect", "filename": "/venv/lib/python3.7/site-packages/_pytest/mark/structures.py", "lineno": 324}, {"message": "Unknown pytest.mark.XTP-276 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html", "when": "collect", "filename": "/venv/lib/python3.7/site-packages/_pytest/mark/structures.py", "lineno": 324}, {"message": "Unknown pytest.mark.XTP-293 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html", "when": "collect", "filename": "/venv/lib/python3.7/site-packages/_pytest/mark/structures.py", "lineno": 324}]}