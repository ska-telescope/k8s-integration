image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3

variables:
  MINIKUBE: "false"
  VALUES: "pipeline.yaml"
  CHARTS_TO_PUBLISH: skalow skamid
  INGRESS_HOST: "kubernetes.engageska-portugal.pt"

stages:
  - clean
  - test
  - post_test
  - debug
  - publish
  - release
  - clean_staging
  - deploy_staging
  - update_versions
  - cleanup

.uninstall_template: &uninstall_definition
  tags:
  - k8srunner
  script:
  - &uninstall_scripts |
    make uninstall
    kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,etcd,configmaps --all
    kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,etcd,configmaps --all
    make delete_namespace
    make delete_sdp_namespace
  only:
    refs:
      - master
    variables:
      - $DELETE == "true"

.create_credentials_template: &create_credentials_definition
  tags:
  - k8srunner
  variables:
  # - KUBE_NAMESPACE: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH
  - SERVICE_ACCOUNT: ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH
  image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3
  before_script:
  - &create_k8s_cred_dependencies |
    apt-get -y update
    apt-get install -y curl ca-certificates jq --no-install-recommends
  script:
  - &create_k8s_creds |
    curl -s https://gitlab.com/ska-telescope/templates-repository/-/raw/master/scripts/namespace_auth.sh | bash -s $SERVICE_ACCOUNT $KUBE_NAMESPACE $KUBE_NAMESPACE_SDP
  only:
    refs:
    - branches
    environment:
      kubernetes:
        namespace: $KUBE_NAMESPACE

.uninstall_template_after_script: &uninstall_definition_after_script
  after_script:
  - *uninstall_scripts

.create_credentials_after_script: &create_k8s_creds_after_script
  after_script:
  - *create_k8s_creds

uninstall mid:
  stage: clean
  variables:
    HELM_RELEASE: "test-mid"
    KUBE_NAMESPACE: "integration-mid"
    KUBE_NAMESPACE_SDP: "integration-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
    KEEP_NAMESPACE: "true"
  <<: *uninstall_definition
  environment:
    name: "test"

uninstall low:
  stage: clean
  variables:
    HELM_RELEASE: "test-low"
    KUBE_NAMESPACE: "integration-low"
    KUBE_NAMESPACE_SDP: "integration-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    KEEP_NAMESPACE: "true"
  <<: *uninstall_definition
  environment:
    name: "test-low"

uninstall mid on demand:
  stage: cleanup
  variables:
    HELM_RELEASE: "test-mid-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
    KEEP_NAMESPACE: "false"
  tags:
    - k8srunner
  script:
  - *uninstall_scripts
  environment:
    name: "test"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid
  when: manual
  only:
    refs:
      - branches

uninstall low on demand:
  stage: cleanup
  variables:
    HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    KEEP_NAMESPACE: "false"
  tags:
    - k8srunner
  script:
  - *uninstall_scripts
  environment:
    name: "test"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low
  when: manual
  only:
    refs:
      - branches

.deploy_template: &deploy_definition
  tags:
  - k8srunner
  script:
  - make clean-and-deploy
  # - make install-or-upgrade
  # - make smoketest
  # - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always
  
deploy_from_helm:
  stage: deploy
  variables:
    DEPLOYMENT_CONFIGURATION: "skamid"
    MARK: "skamid or common"
    HELM_RELEASE: "test-mid-$CI_COMMIT_BRANCH"
    TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
    INSTALL_FROM_REPO: "True" # Install from Helm repository
    # UMBRELLA_CHART_PATH: "mvp-mid"
  before_script:
    - *create_k8s_cred_dependencies
    - *create_k8s_creds
  <<: *deploy_definition
  environment:
    name: "test"
    url: "http://$INGRESS_HOST/ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid
  when: manual
  only:
    refs:
      - branches

.test_template: &test_definition
  tags:
  - k8srunner
  script:
  - make install-or-upgrade
  - make smoketest
  - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
  - make k8s_test && [ -f "build/report.xml" ]
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always

test mid:
  stage: test
  variables:
    HELM_RELEASE: "test-mid"
    KUBE_NAMESPACE: "integration-mid"
    KUBE_NAMESPACE_SDP: "integration-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
    MARK: "skamid or common"
    KEEP_NAMESPACE: "true"
  <<: *test_definition
  environment:
    name: "test"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      namespace: $KUBE_NAMESPACE
  only:
    refs:
      - master

test mid on demand:
  stage: test
  variables:
    DEPLOYMENT_CONFIGURATION: "skamid"
    MARK: "skamid or common"
    HELM_RELEASE: "test-mid-$CI_COMMIT_BRANCH"
    TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
  before_script:
    - *create_k8s_cred_dependencies
    - *create_k8s_creds
  <<: *test_definition
  environment:
    name: "test"
    url: "http://$INGRESS_HOST/ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid
  when: manual
  only:
    refs:
      - branches

test low:
  stage: test
  variables:
    HELM_RELEASE: "test-low"
    KUBE_NAMESPACE: "integration-low"
    KUBE_NAMESPACE_SDP: "integration-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    MARK: "skalow or common"
    KEEP_NAMESPACE: "true"
  <<: *test_definition
  environment:
    name: "test-low"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
  only:
    refs:
      - master

test low on demand:
  stage: test
  variables:
    DEPLOYMENT_CONFIGURATION: "skalow"
    MARK: "skalow or common"
    HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
    TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
  before_script:
    - *create_k8s_cred_dependencies
    - *create_k8s_creds
  <<: *test_definition
  environment:
    name: "test-low"
    url: "http://$INGRESS_HOST/ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low
  when: manual
  only:
    refs:
      - branches

.sdp_config_dump_template: &sdp_config_dump_definition
  tags:
  - docker-executor
  script:
  - kubectl exec -n $KUBE_NAMESPACE sdp-console-0 -- sdpcfg ls values -R / > sdp.config.json
  when: manual
  artifacts:
    paths:
    - sdp.config.json

sdp_config_dump_mid:
  stage: debug
  variables:
    KUBE_NAMESPACE: "integration-mid"
    KUBE_NAMESPACE_SDP: "integration-mid-sdp"
  environment:
    name: "test"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
  only:
    refs:
      - master
  <<: *sdp_config_dump_definition

tag_commit:
  stage: release
  tags:
    - k8srunner
  when: manual
  # needs:
  #   - job: publish-chart
  only:
    refs:
      - master
  script:
    - make release-skampi USERNAME="$GITLAB_USER_NAME" EMAILID=$GITLAB_USER_EMAIL PRIVATE_TOKEN=$SKAMPI_RELEASE_MANAGER_GITLAB_PRIVATE_TOKEN

clean_staging_low:
  stage: clean_staging
  variables:
    HELM_RELEASE: "staging-low"
    KUBE_NAMESPACE: "staging-low"
    KUBE_NAMESPACE_SDP: "staging-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
  tags:
    - k8srunner
  only:
    refs:
      - tags
  script:
  - *uninstall_scripts
  environment:
    name: "staging-low"
  
clean_staging_mid:
  stage: clean_staging
  variables:
    HELM_RELEASE: "staging-mid"
    KUBE_NAMESPACE: "staging-mid"
    KUBE_NAMESPACE_SDP: "staging-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
  tags:
    - k8srunner
  only:
    refs:
      - tags
  script:
  - *uninstall_scripts
  environment:
    name: "staging-mid"

deploy_staging_low:
  stage: deploy_staging
  variables:
    HELM_RELEASE: "staging-low"
    KUBE_NAMESPACE: "staging-low"
    KUBE_NAMESPACE_SDP: "staging-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
  environment:
    name: "staging-low"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
  tags:
    - k8srunner
  script:
    - make install-or-upgrade
    - make smoketest
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
  only:
    refs:
      - tags
  needs:
    - job: clean_staging_low
  
deploy_staging_mid:
  stage: deploy_staging
  variables:
    HELM_RELEASE: "staging-mid"
    KUBE_NAMESPACE: "staging-mid"
    KUBE_NAMESPACE_SDP: "staging-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
  environment:
    name: "staging-mid"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
  tags:
    - k8srunner
  script:
    - make install-or-upgrade
    - make smoketest
    - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
  only:
    refs:
      - tags
  needs:
    - job: clean_staging_mid

version_bump_charts:
  stage: update_versions
  tags:
    - k8srunner
  only:
    refs:
      - tags
  script:
    - curl -s https://gitlab.com/ska-telescope/templates-repository/-/raw/master/scripts/version_bump_charts.sh | bash
    - make commit-and-push-to-master USERNAME="project_14654456_bot" EMAILID=$MARVIN_EMAIL PRIVATE_TOKEN=$MARVIN_PRIVATE_TOKEN

xray_report:
  stage: post_test
  tags:
  - docker-executor
  script:
    - 'curl -X POST -H "Content-type: application/json" --fail
         -H "Authorization: Basic $JIRA_AUTH"
         --data @build/cucumber.json
         https://jira.skatelescope.org/rest/raven/1.0/import/execution/cucumber'
  when: always
  only: [master]
  retry: 2

publish-chart:
  when: on_success
  except: 
    - master

include:
# Helm Chart Publish
# https://developer.skatelescope.org/en/latest/development/software_package_release_procedure.html#package-and-publish-helm-charts-to-the-ska-helm-chart-repository
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/helm_publish.yml'
