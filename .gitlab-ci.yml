image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3

variables:
  MINIKUBE: "false"
  VALUES: "pipeline.yaml"
  CHARTS_TO_PUBLISH: skalow skamid
  INGRESS_HOST: "kubernetes.engageska-portugal.pt"

stages:
  - clean
  - deploy
  - test
  - post_test
  - debug
  - publish
  - release
  - clean_staging
  - deploy_staging
  - update_versions
  - cleanup

.uninstall_template: &uninstall_definition
  script:
  - &uninstall_scripts |
    make uninstall
    kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    kubectl -n $KUBE_NAMESPACE_SDP delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    make delete_namespace
    make delete_sdp_namespace
  only:
    refs:
      - master
    variables:
      - $DELETE == "true"

.create_k8s_creds: &create_k8s_creds
- apt-get -y update
- apt-get install -y curl ca-certificates jq --no-install-recommends
- curl -s https://gitlab.com/ska-telescope/templates-repository/-/raw/master/scripts/namespace_auth.sh | bash -s $SERVICE_ACCOUNT $KUBE_NAMESPACE $KUBE_NAMESPACE_SDP || true


.deploy_template: &deploy_definition
  script:
  - make install-or-upgrade
  - make smoketest
  - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always

.test_template: &test_definition
  script:
  # EDA architecture is going to change as it needs additional resources.
  # Archiver will be deployed as a subchart.
  # Thus Archiver deployment is disabled for now.
  # - branch_name=$(echo $CI_COMMIT_BRANCH | tr '-' '_')
  # - DBNAME=$(echo $DBNAME | tr '-' '_')
  # - echo $DBNAME
  # - make install-or-upgrade-archiver ARCHIVER_NAMESPACE=$ARCHIVER_NAMESPACE DBNAME=$DBNAME
  - make install-or-upgrade
  - make smoketest
  - kubectl get all,pv,pvc,ingress -n $KUBE_NAMESPACE
  # - kubectl get all,ingress -n $ARCHIVER_NAMESPACE
  - make k8s_test ARCHIVER_NAMESPACE=$ARCHIVER_NAMESPACE && [ -f "build/report.xml" ]
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always

.tags_default: &tags_default
- k8srunner

.tags_psi_low: &tags_psi_low
- k8srunner-psi-low
 

mid_uninstall:
  stage: clean
  tags: *tags_default
  variables:
    HELM_RELEASE: "test-mid"
    KUBE_NAMESPACE: "integration-mid"
    KUBE_NAMESPACE_SDP: "integration-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
    KEEP_NAMESPACE: "true"
  <<: *uninstall_definition
  environment:
    name: "test"
    action: stop

low_uninstall:
  stage: clean
  tags: *tags_default
  variables:
    HELM_RELEASE: "test-low"
    KUBE_NAMESPACE: "integration-low"
    KUBE_NAMESPACE_SDP: "integration-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    KEEP_NAMESPACE: "true"
  <<: *uninstall_definition
  environment:
    name: "test-low"
    action: stop

psi_low_uninstall:
  stage: clean
  tags: *tags_psi_low
  variables:
    HELM_RELEASE: "test-low"
    KUBE_NAMESPACE: "integration-low"
    KUBE_NAMESPACE_SDP: "integration-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    KEEP_NAMESPACE: "true"
  <<: *uninstall_definition
  environment:
    name: "psi-low-integration"
    action: stop

mid_on_demand_uninstall:
  stage: cleanup
  tags: *tags_default
  variables:
    HELM_RELEASE: "test-mid-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
    KEEP_NAMESPACE: "true" # to stop ns deletion before actual uninstall
  script:
  - *uninstall_scripts
  environment:
    name: "test/$CI_COMMIT_REF_NAME"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid
    action: stop
  when: manual
  only:
    refs:
      - branches

low_on_demand_uninstall:
  stage: cleanup
  tags: *tags_default
  variables:
    HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    KEEP_NAMESPACE: "true" # to stop ns deletion before actual uninstall
  script:
  - *uninstall_scripts
  environment:
    name: "test-low/$CI_COMMIT_REF_NAME"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low
    action: stop
  when: manual
  only:
    refs:
      - branches

psi_low_on_demand_uninstall:
  stage: cleanup
  tags: *tags_psi_low
  variables:
    HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    KEEP_NAMESPACE: "true" # to stop ns deletion before actual uninstall
  script:
  - *uninstall_scripts
  environment:
    name: "psi-low-test/$CI_COMMIT_REF_NAME"
    action: stop
  when: manual
  only:
    refs:
      - branches

mid_test:
  stage: test
  tags: *tags_default
  variables:
    HELM_RELEASE: "test-mid"
    KUBE_NAMESPACE: "integration-mid"
    KUBE_NAMESPACE_SDP: "integration-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
    MARK: "skamid or common"
    KEEP_NAMESPACE: "true"
    ARCHIVER_NAMESPACE: "integration-mid-archiver"
    DBNAME: "integration_mid_archiver_db"
  <<: *test_definition
  environment:
    name: "test"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      namespace: $KUBE_NAMESPACE
    on_stop: mid_uninstall
  only:
    refs:
      - master

mid_on_demand_test:
  stage: test
  tags: *tags_default
  variables:
    DEPLOYMENT_CONFIGURATION: "skamid"
    MARK: "skamid or common"
    HELM_RELEASE: "test-mid-$CI_COMMIT_BRANCH"
    TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
    ARCHIVER_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-archiver"
    DBNAME: "$CI_COMMIT_BRANCH-mid_archiver_db"
  before_script:
    - *create_k8s_creds
  <<: *test_definition
  # Following block is commented because archiver is not deployed.
  # after_script:
  #   - kubectl logs archiver-es-archiver-test-01-0 -n "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-archiver"
  #   - kubectl logs archiver-cm-archiver-test-01-0 -n "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-archiver"
  #   - make delete-archiver ARCHIVER_NAMESPACE="ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid-archiver"
  environment:
    name: "test/$CI_COMMIT_REF_NAME"
    url: "http://$INGRESS_HOST/ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-mid
    on_stop: mid_on_demand_uninstall
    auto_stop_in: 2 hours
  when: manual
  only:
    refs:
      - branches

low_test:
  stage: test
  tags: *tags_default
  variables:
    HELM_RELEASE: "test-low"
    KUBE_NAMESPACE: "integration-low"
    KUBE_NAMESPACE_SDP: "integration-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    MARK: "skalow or common"
    KEEP_NAMESPACE: "true"
    ARCHIVER_NAMESPACE: "integration-low-archiver"
    DBNAME: "integration_low_archiver_db"
  <<: *test_definition
  environment:
    name: "test-low"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: low_uninstall
  only:
    refs:
      - master
      
psi_low_test:
  stage: test
  tags: *tags_psi_low
  variables:
    HELM_RELEASE: "test-low"
    KUBE_NAMESPACE: "integration-low"
    KUBE_NAMESPACE_SDP: "integration-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    MARK: "skalow or common"
    KEEP_NAMESPACE: "true"
    ARCHIVER_NAMESPACE: "integration-low-archiver"
    DBNAME: "integration_low_archiver_db"
    INGRESS_HOST: "202.9.15.131" # psi-head ip
  <<: *test_definition
  environment:
    name: "psi-low-integration"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: psi_low_uninstall
  only:
    refs:
      - master

low_on_demand_test:
  stage: test
  tags: *tags_default
  variables:
    DEPLOYMENT_CONFIGURATION: "skalow"
    MARK: "skalow or common"
    HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
    TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
    ARCHIVER_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
    DBNAME: "$CI_COMMIT_BRANCH-low_archiver_db"
  before_script:
    - *create_k8s_creds
  <<: *test_definition
  # Following block is commented because archiver is not deployed.
  # after_script:
  #   - kubectl logs archiver-es-archiver-test-01-0 -n "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
  #   - kubectl logs archiver-cm-archiver-test-01-0 -n "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
  #   - make delete-archiver ARCHIVER_NAMESPACE="ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
  environment:
    name: "test-low/$CI_COMMIT_REF_NAME"
    url: "http://$INGRESS_HOST/ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low
    on_stop: low_on_demand_uninstall
    auto_stop_in: 2 hours
  when: manual
  only:
    refs:
      - branches
      
psi_low_on_demand_test:
  stage: test
  tags: *tags_psi_low
  variables:
    DEPLOYMENT_CONFIGURATION: "skalow"
    MARK: "skalow or common"
    HELM_RELEASE: "test-low-$CI_COMMIT_BRANCH"
    TANGO_DATABASE_DS: "databaseds-tango-base-test-$CI_COMMIT_BRANCH"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low"
    KUBE_NAMESPACE_SDP: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-sdp"
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
    ARCHIVER_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
    DBNAME: "$CI_COMMIT_BRANCH-low_archiver_db"
    INGRESS_HOST: "202.9.15.131" # psi-head ip
  before_script:
    - *create_k8s_creds
  <<: *test_definition
  # Following block is commented because archiver is not deployed.
  # after_script:
  #   - kubectl logs archiver-es-archiver-test-01-0 -n "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
  #   - kubectl logs archiver-cm-archiver-test-01-0 -n "ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
  #   - make delete-archiver ARCHIVER_NAMESPACE="ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low-archiver"
  environment:
    name: "psi-low-test/$CI_COMMIT_REF_NAME"
    url: "http://$INGRESS_HOST/ci-$CI_PROJECT_NAME-$CI_COMMIT_BRANCH-low/taranta"
    on_stop: psi_low_on_demand_uninstall
    auto_stop_in: 2 hours
  when: manual
  only:
    refs:
      - branches

mid_sdp_config_dump:
  stage: debug
  tags: *tags_default
  variables:
    KUBE_NAMESPACE: "integration-mid"
    KUBE_NAMESPACE_SDP: "integration-mid-sdp"
    KEEP_NAMESPACE: "true"
  script:
  - kubectl exec -n $KUBE_NAMESPACE sdp-console-0 -- sdpcfg ls values -R / > sdp.config.json
  artifacts:
    paths:
    - sdp.config.json
  environment:
    name: "test"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
  when: manual
  only:
    refs:
      - master

tag_commit:
  stage: release
  variables:
    USERNAME: "$GITLAB_USER_NAME"
    EMAILID: $GITLAB_USER_EMAIL
    PRIVATE_TOKEN: $SKAMPI_RELEASE_MANAGER_GITLAB_PRIVATE_TOKEN
  tags:
    - k8srunner
  when: manual
  # needs:
  #   - job: publish-chart
  only:
    refs:
      - master
  script:
    - make release-skampi

low_clean_staging:
  stage: clean_staging
  tags: *tags_default
  variables:
    HELM_RELEASE: "staging-low"
    KUBE_NAMESPACE: "staging-low"
    KUBE_NAMESPACE_SDP: "staging-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
  only:
    refs:
      - tags
  script:
  - *uninstall_scripts
  environment:
    name: "staging-low"
    action: stop

psi_low_clean_staging:
  stage: clean_staging
  tags: *tags_psi_low
  variables:
    HELM_RELEASE: "staging-low"
    KUBE_NAMESPACE: "staging-low"
    KUBE_NAMESPACE_SDP: "staging-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
  only:
    refs:
      - tags
  script:
  - *uninstall_scripts
  environment:
    name: "psi-low-staging"
    action: stop

mid_clean_staging:
  stage: clean_staging
  tags: *tags_default
  variables:
    HELM_RELEASE: "staging-mid"
    KUBE_NAMESPACE: "staging-mid"
    KUBE_NAMESPACE_SDP: "staging-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
  only:
    refs:
      - tags
  script:
  - *uninstall_scripts
  environment:
    name: "staging-mid"
    action: stop

low_deploy_staging:
  stage: deploy_staging
  tags: *tags_default
  variables:
    HELM_REPO_NAME: "skatelescope"
    UMBRELLA_CHART_PATH: "$HELM_REPO_NAME/mvp-low"
    HELM_RELEASE: "staging-low"
    KUBE_NAMESPACE: "staging-low"
    KUBE_NAMESPACE_SDP: "staging-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
  <<: *deploy_definition
  environment:
    name: "staging-low"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: low_clean_staging
  only:
    refs:
      - tags
  needs:
    - job: low_clean_staging
      
psi_low_deploy_staging:
  stage: deploy_staging
  tags: *tags_psi_low
  variables:
    HELM_REPO_NAME: "skatelescope"
    UMBRELLA_CHART_PATH: "$HELM_REPO_NAME/mvp-low"
    HELM_RELEASE: "staging-low"
    KUBE_NAMESPACE: "staging-low"
    KUBE_NAMESPACE_SDP: "staging-low-sdp"
    DEPLOYMENT_CONFIGURATION: "skalow"
    INGRESS_HOST: "202.9.15.131" # psi-head ip
  <<: *deploy_definition
  environment:
    name: "psi-low-staging"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    on_stop: psi_low_clean_staging
  only:
    refs:
      - tags
  needs:
    - job: psi_low_clean_staging

mid_deploy_staging:
  stage: deploy_staging
  tags: *tags_default
  variables:
    HELM_REPO_NAME: "skatelescope"
    UMBRELLA_CHART_PATH: "$HELM_REPO_NAME/mvp-mid"
    HELM_RELEASE: "staging-mid"
    KUBE_NAMESPACE: "staging-mid"
    KUBE_NAMESPACE_SDP: "staging-mid-sdp"
    DEPLOYMENT_CONFIGURATION: "skamid"
  <<: *deploy_definition
  environment:
    name: "staging-mid"
    url: "http://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    on_stop: mid_clean_staging
  only:
    refs:
      - tags
  needs:
    - job: mid_clean_staging

version_bump_charts:
  stage: update_versions
  variables:
    USERNAME: "project_11448712_bot"
    EMAILID: $MARVIN_EMAIL
    PRIVATE_TOKEN: $MARVIN_PRIVATE_TOKEN
  tags:
    - k8srunner
  only:
    refs:
      - tags
  script:
    - curl -s https://gitlab.com/ska-telescope/templates-repository/-/raw/master/scripts/version_bump_charts.sh | bash
    - make commit-and-push-to-master

xray_report:
  stage: post_test
  tags:
  - docker-executor
  script:
    - 'curl -X POST -H "Content-type: application/json" --fail
         -H "Authorization: Basic $JIRA_AUTH"
         --data @build/cucumber.json
         https://jira.skatelescope.org/rest/raven/1.0/import/execution/cucumber'
  when: always
  only: [master]
  retry: 2

publish-chart:
  when: on_success
  except:
    - master

include:
# Helm Chart Publish
# https://developer.skatelescope.org/en/latest/development/software_package_release_procedure.html#package-and-publish-helm-charts-to-the-ska-helm-chart-repository
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/helm_publish.yml'
