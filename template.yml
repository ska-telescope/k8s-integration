---
# Source: webjive/templates/webjive-ingresses.yaml

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret-webjive-test
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lVZE9hcDNwTUV0WGJOcUxIOWZkSG84Q3M3eXE4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1B6RXFNQ2dHQTFVRUF3d2hhVzUwWldkeVlYUnBiMjR1Wlc1bllXZGxjMnRoTFhCdmNuUjFaMkZzTG5CMApNUkV3RHdZRFZRUUtEQWhOYVc1cGEzVmlaVEFlRncweE9UQTJNak14T1RVME16QmFGdzB5TURBMk1qSXhPVFUwCk16QmFNRDh4S2pBb0JnTlZCQU1NSVdsdWRHVm5jbUYwYVc5dUxtVnVaMkZuWlhOcllTMXdiM0owZFdkaGJDNXcKZERFUk1BOEdBMVVFQ2d3SVRXbHVhV3QxWW1Vd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFSwpBb0lCQVFEVE1zdUZlYkVkVHZ1Y3ZQUklMQm1TM2YvWWVkbEFwVm5vUmRwQXJqV1U5THpncmFTdXpwWm54ZUFpCldISDRyTmhJK2pZbFRuTGpFMndIenN5d2FyRjk0UENTM1NVeExjbmNqQ0JEb04yS3ZLOHkwblFYcXE3Z0hVTnEKckxYNHkrbFVhbEVpYUM3dys4V29qcFpYTFNmWkhaTFlxSTJWSENlZVNDSXFuVENiRCtGTkk5cnNyMVF1U0VwaQo2elA2NDhmaFNaWTlDMXB5MmQzV01uNlVxbVViYzFhczVxYnh0bm5UcllJWHpjL2lGc1J5VWFac1hEdCs2bkhwClBMaGlpTTNTTFV6NlhKRzlwcUduUlpuRW4zWmlLeHFLNHBCY2hxMndOU0NYMzNqbHhJMmp4cHN2WEI4ZHZ6emkKeEkvUW9QVUFXOG55emVFV2lRME5QaU16UnNnYkFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVFZaTGNCdzE0VQo4Zy9HZENRTGZrTERPRndnOFRBZkJnTlZIU01FR0RBV2dCVFZaTGNCdzE0VThnL0dkQ1FMZmtMRE9Gd2c4VEFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWGFMdU96dEl3V0d3K1dyNGIKWldIVVhXUzAyRUdDMVBpRkpZSkhrOFJMN3I2Ulg2QkwyRTVrVzlkK1Vjd1BQdk1QUGIwNDFsVGZGL1NSeVdFMgplcVJjbFZKU0JRL1EzNDEzQmpWeko3ZEI5ZVVMd3B4U0xmS3VBUWs1QkhnMVM2VTBEUUsrOTZISjQ1L0IvY1E3CnBuYmRRWG5CcHNTN1NHRDhVRTI3Q0tFbllhb2FaQ1QxdHBYR2NOME1uWXdsWDR1RkpORUFKSTVnQnRiSEtjeG8KWlFWbFp5eWFOVHZ0eExUTEJXVC8wRmlzc1ZmRTJpa0ZCNHFpQXZlbmNJUHdjdjN4L2daZDJSWmdSY1VCSUN6YQpFV3dTd2VKSGhRb2dZaGI4ck1tZnFVT0ppRE9rNTY2a0Y5bHZiY1ZmMmJoZU1UWUQvNGh6Nm9QR1FxTHY0eWtOCmYyVUkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRRFRNc3VGZWJFZFR2dWMKdlBSSUxCbVMzZi9ZZWRsQXBWbm9SZHBBcmpXVTlMemdyYVN1enBabnhlQWlXSEg0ck5oSStqWWxUbkxqRTJ3SAp6c3l3YXJGOTRQQ1MzU1V4TGNuY2pDQkRvTjJLdks4eTBuUVhxcTdnSFVOcXJMWDR5K2xVYWxFaWFDN3crOFdvCmpwWlhMU2ZaSFpMWXFJMlZIQ2VlU0NJcW5UQ2JEK0ZOSTlyc3IxUXVTRXBpNnpQNjQ4ZmhTWlk5QzFweTJkM1cKTW42VXFtVWJjMWFzNXFieHRublRyWUlYemMvaUZzUnlVYVpzWER0KzZuSHBQTGhpaU0zU0xVejZYSkc5cHFHbgpSWm5FbjNaaUt4cUs0cEJjaHEyd05TQ1gzM2pseEkyanhwc3ZYQjhkdnp6aXhJL1FvUFVBVzhueXplRVdpUTBOClBpTXpSc2diQWdNQkFBRUNnZ0VBU2dkNEIyVk1pL1Z2aE5WRzJ6VjZFVnozblMyNDFVd2dZNlo0aGt1S1JKZzAKekp5UktTVUkyMzhrdldVN0xldUlOS3hmNWx2Rk1ZdFJScnRhVEV4WndzSGlFZGlxZkw2TUQxNmV3SlhXa2hicApZbXNhZm1FNXd4eiswSm1SZjVBYVRaaW1yK1RNNzNPUktUQXh5b1R0ZnRFNjgrN0JFZzg0WSticzh2citXcHRtCno4eHowaDJHdDRSSFFxb0ZSbDVacUxIcmFlM05MNHBiSWxKcnUyUS9qYXYrTE42R2pxR3RncjFKRFM1M2hZQ28KWi9RKzdJRUM2QTJ6THV0a0d5U0dvTWF1cGU1TDJUQndQRVFtakN4NXVRaFZ3NUtCclVyaEZCK3ZYK3hwZUk4WgpneE5sYmNOWHgzRlpQek4vMnFuQkl1ekhqdHNjZVdPSlZQbiswTmJaQVFLQmdRRDhuNXNMR2FaRGRoZGtFWWNTCjFQeW9ndE5Fakcxd2NkV01DRk5YODlMbFZlQm5HRnl2Rm5heHVubUVwTkJickpKakwzRVhVb1ZFQzZ2VnkzbXEKR3B1MFFVRnd5TWxMWGtNdXVMbGlqY0RaRHlXV1pQWUxiVmtlV2dndFI1dDNSRVp3akR2MjBpZXE0N3hiTkZBRQp2V1Jza1J2KzJhNWZaWUVDMzdRbUVlSUlZUUtCZ1FEV0JYSk9IOGZBajJwSVdqUHhpVnNuVUd6cGorSnY4SjQxCjc4YlZoanJxVk9RUTNuQXFRazVtcHBFbi9lVHQ1dUlPc3h5L3hRTWw0dkg5LzQ0bnFUcUNOMDhYdllpT2pBRi8KNVVXSUJ1cXNhelFSSktEUXR6cVlJUk81M0FPSXIzQkZvY0w3QWNWYWVhYzV3ZTA0bGQ3czhpWEhJb3NlM0dkYgpoZnc5U2M0eCt3S0JnSHV3U2VGdGRaS2lSMkdmazFzTkhZZ0VSaHpTQk9PQldPVnZUaDlLS29CUFE4ZzJqV3JNCnZPRFlSSmRGZXg3bnArVVlYVzdsNElvb2pNSHBGbkRMQm1HRGNkOGU4REFPdnlZcEc5dTlQQ2NLMjRSL2VsaXQKK1d4NitIWHpFWk9id2tGbzZCTTVZbUt4am8rNVZWUjh4cWJCaGN1S0dXNXI3SGJUd1FqQ3lNRUJBb0dBVHpWZQowNWtoZFp2ZWF2NnZZTUpFTVMycjBWbEdKY1c0MkI5d3lFL1FlQytJNU5GZVU5V01iS05TNzZrZzFBZHlQSngvCmxGM1d4MnZSd2Y2VjN3bmJ0SnZCc3ZpYmxKNHVZK1kzc0p0V3VROUlDdHd5aEd4N3pCZloxQnlnVmpNUDYwVnUKQXpYcGs0MlluV0N2YWhUVmwzNGJDek0ycCtwTWVtd0JLYkdxRlljQ2dZQTFBTVFocU9GcWJlSmMxMlBVdDkvSApLZFdXK2w2dGNtWmRTdkRnZkxPdmJQWkp5M1NJdHBxbzNoL1gyTWl2c0ZZdmVBZVdQUDV5OHl2VG1GV21rQ0hnCkFWdi9zRHAvOW9XRENqUTZvdVpvaTVLMXVFSWRpeFcrRmdKUDZSUHdZcTBqSkt3eVgyYTdBSFhWWDBuUFcxUTEKWE80Vjg0bjBhU2VrQ2szbFYvVzNYUT09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  


# use Traefik as default
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webjive-tangogql-ing-webjive-test
  annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/request-modifier: "ReplacePathRegex: /testdb/((db|socket|graphiql).*?) /$1"
spec:
  tls:
    - hosts:
      - integration.engageska-portugal.pt
      secretName: tls-secret-webjive-test
  rules:
    - host: integration.engageska-portugal.pt
    - http:
        paths:
        - path: /testdb/db
          backend:
           serviceName: webjive-webjive-test
           servicePort: 5004
        - path: /testdb/socket
          backend:
           serviceName: webjive-webjive-test
           servicePort: 5004
        - path: /testdb/graphiql
          backend:
           serviceName: webjive-webjive-test
           servicePort: 5004

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webjive-authserver-ing-webjive-test
  annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/request-modifier: "ReplacePathRegex: /auth/((login|user).*?) /$1"
spec:
  tls:
    - hosts:
      - integration.engageska-portugal.pt
      secretName: tls-secret-webjive-test
  rules:
    - host: integration.engageska-portugal.pt
    - http:
        paths:
        - path: /auth
          backend:
           serviceName: webjive-webjive-test
           servicePort: 8080

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webjive-main-ing-webjive-test
  annotations:
      kubernetes.io/ingress.class: traefik
spec:
  tls:
    - hosts:
      - integration.engageska-portugal.pt
      secretName: tls-secret-webjive-test
  rules:
    - host: integration.engageska-portugal.pt
    - http:
        paths:
        - path: /
          backend:
            serviceName: webjive-webjive-test
            servicePort: 80
        - path: /testdb
          backend:
           serviceName: webjive-webjive-test
           servicePort: 80
        - path: /testdb/dashboard
          backend:
           serviceName: webjive-webjive-test
           servicePort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webjive-dashboard-ing-webjive-test
  annotations:
      kubernetes.io/ingress.class: traefik
spec:
  tls:
    - hosts:
      - integration.engageska-portugal.pt
      secretName: tls-secret-webjive-test
  rules:
    - host: integration.engageska-portugal.pt
    - http:
        paths:
        - path: /dashboards
          backend:
           serviceName: webjive-webjive-test
           servicePort: 3012



---
# Source: webjive/templates/mongodb-pv.yaml

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongodb-webjive-test
  namespace: integration
  labels:
    app: mongodb-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  storageClassName: standard
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/mongodb-webjive-test/

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-webjive-test
  namespace: integration
  labels:
    app: mongodb-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi


---
# Source: webjive/templates/webjive-pv.yaml
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: webjive-webjive-test
  namespace: integration
  labels:
    app: webjive-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  storageClassName: standard
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/webjive-webjive-test/

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: webjive-webjive-test
  namespace: integration
  labels:
    app: webjive-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Source: webjive/templates/mongodb.yaml

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-webjive-test
  namespace: integration
  labels:
    app: mongodb-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  clusterIP: None
  ports:
  - name: mongodb
    port: 27017
    protocol: TCP
  selector:
    app: mongodb-webjive-test

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-webjive-test
  namespace: integration
  labels:
    app: mongodb-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  selector:
    matchLabels:
      app: mongodb-webjive-test
  serviceName: mongodb-webjive-test
  replicas: 1
  template:
    metadata:
      labels:
        app: mongodb-webjive-test
        chart: webjive-0.1.0
        release: test
        heritage: Tiller
    spec:
      containers:
      - name: mongodb
        image: "mongo:3.6-stretch"
        imagePullPolicy: IfNotPresent
        ports:
        - name: mongodb
          containerPort: 27017
          protocol: TCP
        volumeMounts:
        - name: mongodbdata
          mountPath: /data/db

        resources:

      volumes:
      - name: mongodbdata
        persistentVolumeClaim:
          claimName: mongodb-webjive-test


---
# Source: webjive/templates/webjive.yaml


---
apiVersion: v1
kind: Service
metadata:
  name: webjive-webjive-test
  namespace: integration
  labels:
    app: webjive-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - name: webjive-http
    port: 80
    protocol: TCP
  - name: tangogql-tcp
    port: 5004
    targetPort: tangogql-tcp
    protocol: TCP
  - name: dashboards-tcp
    port: 3012
    protocol: TCP
  - name: authserver-tcp
    port: 8080
    protocol: TCP
  selector:
    app: webjive-webjive-test

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: webjive-webjive-test
  namespace: integration
  labels:
    app: webjive-webjive-test
    chart: webjive-0.1.0
    release: test
    heritage: Tiller
spec:
  selector:
    matchLabels:
      app: webjive-webjive-test
  serviceName: webjive-webjive-test
  replicas: 1
  template:
    metadata:
      labels:
        app: webjive-webjive-test
        chart: webjive-0.1.0
        release: test
        heritage: Tiller
    spec:
      initContainers:
      - name: waitdatabaseds
        image: nexus.engageska-portugal.pt/ska-docker/tango-itango:latest
        imagePullPolicy: IfNotPresent
        command:
          - /usr/local/bin/wait-for-it.sh
          - databaseds-tango-base-test:10000
          - --timeout=30
          - --strict
          - --
          - /usr/local/bin/wait-for-it.sh
          - mongodb-webjive-test:27017
          - --timeout=30
          - --strict
          - --
          - echo "Databaseds/Mongodb ready for use."

      containers:
      - name: webjive
        image: "nexus.engageska-portugal.pt/ska-docker/webjive-develop_webjive:latest"
        imagePullPolicy: Always
        ports:
        - name: webjive-http
          containerPort: 80
          protocol: TCP

      - name: authserver
        image: "nexus.engageska-portugal.pt/ska-docker/webjive-develop_auth:latest"
        imagePullPolicy: Always
        ports:
        - name: authserver-tcp
          containerPort: 8080
          protocol: TCP
        env:
          - name: SECRET
            value: "s3cr3t"

      - name: dashboards
        image: "nexus.engageska-portugal.pt/ska-docker/webjive-develop_dashboards:latest"
        imagePullPolicy: Always
        env:
          - name: MONGO_HOST
            value: "mongodb://mongodb-webjive-test:27017/dashboards"
          - name: SECRET
            value: "s3cr3t"
        ports:
        - name: dashboards-tcp
          containerPort: 3012
          protocol: TCP

      - name: tangogql
        image: "nexus.engageska-portugal.pt/ska-docker/webjive-develop_tangogql:latest"
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /var/log/tangogql
          name: tangogql-logs
        env:
          - name: LOG_PATH
            value: "/var/log/tangogql"
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: TANGO_HOST
            value: databaseds-tango-base-test:10000
        ports:
        - name: tangogql-tcp
          containerPort: 5004
          protocol: TCP

      - name: redis
        image: "redis:latest"
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis-tcp
          containerPort: 6379
          protocol: TCP

        resources:
          null
          
      volumes:
      - name: tangogql-logs
        persistentVolumeClaim:
          claimName: webjive-webjive-test



