
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "tests-mutation-json-{{ template "tests.name" . }}-{{ .Release.Name }}"
  namespace: {{ .Release.Namespace }}
data: 
  mutation.json: 
{{ (tpl (.Files.Glob "data/mutation.json").AsConfig . ) | indent 2  }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "tango-startup-test-script-{{ template "tests.name" . }}-{{ .Release.Name }}"
  namespace: {{ .Release.Namespace }}
data:
  startup-test-script.py: |
    #!/usr/bin/env python
    import requests
    import json
    import sys

    jsonLogin={"username":"user1","password":"abc123"}
    url = 'http://webjive-webjive-test:8080/login' 
    r = requests.post(url=url, json=jsonLogin)
    webjive_jwt = r.cookies.get_dict()['webjive_jwt']
    
    cookies = {'webjive_jwt': webjive_jwt}

    url = 'http://webjive-webjive-test:5004/db' 
    with open('/app/mutation.json', 'r') as file:
      mutation = file.read().replace('\n', '')

    jsonMutation = json.loads(mutation)
    r = requests.post(url=url, json=jsonMutation, cookies=cookies)
    #print(r.text)
    parsed = json.loads(r.text)
    print(json.dumps(parsed, indent=4, sort_keys=True))


{{ (tpl (.Files.Glob "data/mutation.json").AsConfig . ) | indent 2  }}

---
apiVersion: v1
kind: Pod
metadata:
  name: startup-{{ template "tests.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: startup-{{ template "tests.name" . }}-{{ .Release.Name }}
    chart: {{ template "tests.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  volumes:
    - name: mutation
      configMap:
        name: "tests-mutation-json-{{ template "tests.name" . }}-{{ .Release.Name }}"
    - name: script
      configMap:
        name: "tango-startup-test-script-{{ template "tests.name" . }}-{{ .Release.Name }}"

  containers:
  - name: test1
    image: "{{ .Values.itango.image.registry }}/{{ .Values.itango.image.image }}:{{ .Values.itango.image.tag }}"
    imagePullPolicy: {{ .Values.itango.image.pullPolicy }}
    command:
      - sh
    args:
      - -c
      - "/venv/bin/python /app/startup-test-script.py"
    volumeMounts:
      - name: script
        mountPath: /app
        readOnly: true

  restartPolicy: OnFailure
{{- with .Values.nodeSelector }}
  nodeSelector:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.affinity }}
  affinity:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.tolerations }}
  tolerations:
{{ toYaml . | indent 4 }}
{{- end }}
