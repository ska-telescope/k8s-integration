{{ if .Values.elastic.enabled }}
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
    chart: {{ template "logging.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  storageClassName: standard
  persistentVolumeReclaimPolicy: Recycle
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/elastic-{{ template "logging.name" . }}-{{ .Release.Namespace }}-{{ .Release.Name }}/

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
    chart: {{ template "logging.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Pod
metadata:
  name: pv-recycler
  namespace: default
spec:
  restartPolicy: Never
  volumes:
  - name: vol
    hostPath:
	  path: /data/elastic-{{ template "logging.name" . }}-{{ .Release.Namespace }}-{{ .Release.Name }}/
  containers:
  - name: pv-recycler
    image: "k8s.gcr.io/busybox"
    command: ["/bin/sh", "-c", "test -e /scrub && rm -rf /scrub/..?* /scrub/.[!.]* /scrub/*  && test -z \"$(ls -A /scrub)\" || exit 1"]
    volumeMounts:
    - name: vol
      mountPath: /scrub
{{ end }}
