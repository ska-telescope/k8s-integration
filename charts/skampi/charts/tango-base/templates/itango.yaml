{{ if .Values.itango.enabled }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: itango-configuration-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
data:
  sdp-subarray-configure-0001.json:
{{ (tpl (.Files.Glob "data/sdp-subarray-configure-0001.json").AsConfig . ) | indent 2 }}
  csp-subarray-configure-scan-0001.json:
{{ (tpl (.Files.Glob "data/csp-subarray-configure-scan-0001.json").AsConfig . ) | indent 2 }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: itango-scripts-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
data:
  load_config.py:
{{ (tpl (.Files.Glob "data/load_config.py").AsConfig . ) | indent 2 }}

---

apiVersion: v1
kind: Pod
metadata:
  name: itango-{{ template "tango-base.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: itango-{{ template "tango-base.name" . }}-{{ .Release.Name }}
    chart: {{ template "tango-base.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  volumes:
    - name: itango-configuration-{{ .Release.Name }}
      configMap:
        name: itango-configuration-{{ .Release.Name }}
    - name: itango-scripts-{{ .Release.Name }}
      configMap:
        name: itango-scripts-{{ .Release.Name }}

  containers:
  - name: itango
    image: "{{ .Values.itango.image.registry }}/{{ .Values.itango.image.image }}:{{ .Values.itango.image.tag }}"
    imagePullPolicy: {{ .Values.itango.image.pullPolicy }}
    command:
      - /usr/local/bin/wait-for-it.sh
      - databaseds-{{ template "tango-base.name" . }}-{{ .Release.Name }}:10000
      - --timeout=30
      - --strict
      - --
      - sleep
      - infinity
      # - /venv/bin/itango3
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "tango-base.name" . }}-{{ .Release.Name }}:10000
    volumeMounts:
      - mountPath: /app/data
        name: itango-configuration-{{ .Release.Name }}
        readOnly: true
      - mountPath: /app/scripts
        name: itango-scripts-{{ .Release.Name }}
        readOnly: true
  restartPolicy: Always
{{- with .Values.nodeSelector }}
  nodeSelector:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.affinity }}
  affinity:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.tolerations }}
  tolerations:
{{ toYaml . | indent 4 }}
{{- end }}

{{ end }}
