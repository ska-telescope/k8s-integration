{{ if .Values.databaseds.enabled }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "tango-base.dbservice-name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tango-base.labels" . | indent 4 }}
    component: {{ .Values.databaseds.component }}
    function: {{ .Values.databaseds.function }}
    domain: {{ .Values.databaseds.domain }}
    intent: production
spec:
  ports:
  - name: ds
    port: 10000
  type: NodePort
  selector:
    app: {{ template "tango-base.name" . }}
    component: {{ .Values.databaseds.component }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tango-base.dbservice-name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tango-base.labels" . | indent 4 }}
    component: {{ .Values.databaseds.component }}
    function: {{ .Values.databaseds.function }}
    domain: {{ .Values.databaseds.domain }}
    intent: production
spec:
  selector:
    matchLabels:
      app: {{ template "tango-base.name" . }}
      component: {{ .Values.databaseds.component }}
  serviceName: databaseds-{{ template "tango-base.name" . }}-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "tango-base.labels" . | indent 8 }}
        component: {{ .Values.databaseds.component }}
        function: {{ .Values.databaseds.function }}
        domain: {{ .Values.databaseds.domain }}
        intent: production
    spec:
      initContainers:
      - name: check-db-ready
        image: "{{ .Values.databaseds.image.registry }}/{{ .Values.databaseds.image.image }}:{{ .Values.databaseds.image.tag }}"
        imagePullPolicy: {{ .Values.databaseds.image.pullPolicy }}
        command:
          - /usr/local/bin/wait-for-it.sh
          - {{ template "tango-base.name" . }}-{{ .Values.tangodb.component }}:3306
          - --timeout=30
          - --strict
          - --
          - echo waiting for database complete
      containers:
      - name: databaseds
        image: "{{ .Values.databaseds.image.registry }}/{{ .Values.databaseds.image.image }}:{{ .Values.databaseds.image.tag }}"
        imagePullPolicy: {{ .Values.databaseds.image.pullPolicy }}
        command:
          - /usr/local/bin/DataBaseds
          - "2"
          - -ORBendPoint
          - giop:tcp::10000
        env:
          - name: MYSQL_HOST
            value: {{ template "tango-base.name" . }}-{{ .Values.tangodb.component }}:3306
          - name: MYSQL_DATABASE
            value: "{{ .Values.tangodb.db.db }}"
          - name: MYSQL_USER
            value: "{{ .Values.tangodb.db.user }}"
          - name: MYSQL_PASSWORD
            value: "{{ .Values.tangodb.db.password }}"
          - name: TANGO_HOST
            value: {{ include "tango-base.dbservice-name" . }}:10000
        ports:
        - name: ds
          containerPort: 10000
        {{- if .Values.databaseds.livenessProbe.enabled }}
        readinessProbe:
          tcpSocket:
            port: 10000
          initialDelaySeconds: {{ .Values.databaseds.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.databaseds.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.databaseds.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.databaseds.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.databaseds.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.databaseds.readinessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            port: 10000
          initialDelaySeconds: {{ .Values.databaseds.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.databaseds.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.databaseds.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.databaseds.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.databaseds.livenessProbe.failureThreshold }}
        {{- end }}
        resources:
{{ toYaml .Values.databaseds.resources | indent 10 }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{ end }}
